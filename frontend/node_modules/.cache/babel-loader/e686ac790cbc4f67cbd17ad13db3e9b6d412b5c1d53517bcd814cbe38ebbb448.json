{"ast":null,"code":"var _jsxFileName = \"C:\\\\student\\\\Hexaware\\\\careercrafter\\\\frontend\\\\src\\\\components\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport JobListingService from \"../services/JobListingService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Search = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [searches, setSearches] = useState([]);\n  const GetSearches = async () => {\n    try {\n      const {\n        data\n      } = await JobListingService.GetByTitleContainig(query);\n      console.log(\"Search of job by title \", data);\n      setSearches(data);\n    } catch (error) {\n      console.log(\"Error: \", error);\n    }\n  };\n  useEffect(() => {\n    GetSearches();\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-[10vh] relative flex translate-x-44 items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"ri-search-line text-base text-zinc-100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setQuery(e.target.value),\n      value: query,\n      placeholder: \"search jobs on the basis of title\",\n      className: \"w-[40%] mx-3 p-1 text-xl border-black rounded-md\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), query.length > 0 && /*#__PURE__*/_jsxDEV(\"i\", {\n      onClick: () => setQuery(\"\"),\n      className: \"ri-close-line text-2xl text-zinc-100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"nv4ixiyLplsOcnlG5UDG1Zfss+4=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useState","Link","JobListingService","jsxDEV","_jsxDEV","Search","_s","query","setQuery","searches","setSearches","GetSearches","data","GetByTitleContainig","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","placeholder","length","onClick","_c","$RefreshReg$"],"sources":["C:/student/Hexaware/careercrafter/frontend/src/components/Search.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport JobListingService from \"../services/JobListingService\";\r\n\r\nexport const Search = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [searches, setSearches] = useState([]);\r\n  const GetSearches = async () => {\r\n    try {\r\n      const { data } = await JobListingService.GetByTitleContainig(query);\r\n      console.log(\"Search of job by title \", data);\r\n      setSearches(data);\r\n    } catch (error) {\r\n      console.log(\"Error: \", error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    GetSearches();\r\n  }, [query]);\r\n  return (\r\n    <div className=\"w-full h-[10vh] relative flex translate-x-44 items-center\">\r\n      <i className=\"ri-search-line text-base text-zinc-100\"></i>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        value={query}\r\n        placeholder=\"search jobs on the basis of title\"\r\n        className=\"w-[40%] mx-3 p-1 text-xl border-black rounded-md\"\r\n      />\r\n      {query.length > 0 && (\r\n        <i\r\n          onClick={() => setQuery(\"\")}\r\n          className=\"ri-close-line text-2xl text-zinc-100\"\r\n        ></i>\r\n        \r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,iBAAiB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMV,iBAAiB,CAACW,mBAAmB,CAACN,KAAK,CAAC;MACnEO,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,IAAI,CAAC;MAC5CF,WAAW,CAACE,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEC,KAAK,CAAC;IAC/B;EACF,CAAC;EACDjB,SAAS,CAAC,MAAM;IACdY,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EACX,oBACEH,OAAA;IAAKa,SAAS,EAAC,2DAA2D;IAAAC,QAAA,gBACxEd,OAAA;MAAGa,SAAS,EAAC;IAAwC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1DlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAGC,CAAC,IAAKjB,QAAQ,CAACiB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAC1CA,KAAK,EAAEpB,KAAM;MACbqB,WAAW,EAAC,mCAAmC;MAC/CX,SAAS,EAAC;IAAkD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,EACDf,KAAK,CAACsB,MAAM,GAAG,CAAC,iBACfzB,OAAA;MACE0B,OAAO,EAAEA,CAAA,KAAMtB,QAAQ,CAAC,EAAE,CAAE;MAC5BS,SAAS,EAAC;IAAsC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAEL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CAlCWD,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}