{"ast":null,"code":"import axios from \"../components/utils/axios\";\nconst BASE_REST_API_URL = \"api/employers\";\nclass EmployerService {\n  getAllEmployers() {\n    return axios.get(BASE_REST_API_URL);\n  }\n  addEmployer(employer, auth) {\n    console.log(\"access token \", auth.accessToken);\n    return axios.post(BASE_REST_API_URL, employer, {\n      headers: {\n        Authorization: `Bearer ${auth.accessToken}` // Assuming it's a Bearer token\n      }\n    });\n  }\n  async getIdByEmail(TokenObj) {\n    return axios.get(BASE_REST_API_URL + 'GetIdByEmail/' + TokenObj.userDto.email, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE',\n        'Access-Control-Allow-Credentials': true,\n        Authorization: `Bearer ${TokenObj.accessToken}`\n      }\n    });\n  }\n  deleteEmployerById(id) {\n    return axios.delete(BASE_REST_API_URL + \"/\" + id);\n  }\n  getEmployerById(id) {\n    return axios.get(BASE_REST_API_URL + \"/\" + id);\n  }\n  updateEmployerById(id, employer) {\n    return axios.put(BASE_REST_API_URL + \"/\" + id, employer);\n  }\n}\nexport default new EmployerService();","map":{"version":3,"names":["axios","BASE_REST_API_URL","EmployerService","getAllEmployers","get","addEmployer","employer","auth","console","log","accessToken","post","headers","Authorization","getIdByEmail","TokenObj","userDto","email","deleteEmployerById","id","delete","getEmployerById","updateEmployerById","put"],"sources":["C:/student/Hexaware/careercrafter/frontend/src/services/EmployerService.jsx"],"sourcesContent":["import axios from \"../components/utils/axios\";\r\n\r\nconst BASE_REST_API_URL = \"api/employers\";\r\nclass EmployerService {\r\n  getAllEmployers() {\r\n    return axios.get(BASE_REST_API_URL);\r\n  }\r\n  addEmployer(employer, auth) {\r\n    console.log(\"access token \", auth.accessToken);\r\n    return axios.post(BASE_REST_API_URL, employer, {\r\n      headers: {\r\n        Authorization: `Bearer ${auth.accessToken}`, // Assuming it's a Bearer token\r\n      },\r\n    });\r\n  }\r\n  async getIdByEmail(TokenObj)\r\n    {\r\n       \r\n        return axios.get(BASE_REST_API_URL+'GetIdByEmail/'+TokenObj.userDto.email,\r\n        {\r\n            headers:{\r\n                'Access-Control-Allow-Origin': '*',\r\n            'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE',\r\n            'Access-Control-Allow-Credentials':true,\r\n             Authorization: `Bearer ${TokenObj.accessToken}`\r\n            }\r\n        });\r\n    }\r\n  deleteEmployerById(id) {\r\n    return axios.delete(BASE_REST_API_URL + \"/\" + id);\r\n  }\r\n  getEmployerById(id) {\r\n    return axios.get(BASE_REST_API_URL + \"/\" + id);\r\n  }\r\n  updateEmployerById(id, employer) {\r\n    return axios.put(BASE_REST_API_URL + \"/\" + id, employer);\r\n  }\r\n}\r\nexport default new EmployerService();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,2BAA2B;AAE7C,MAAMC,iBAAiB,GAAG,eAAe;AACzC,MAAMC,eAAe,CAAC;EACpBC,eAAeA,CAAA,EAAG;IAChB,OAAOH,KAAK,CAACI,GAAG,CAACH,iBAAiB,CAAC;EACrC;EACAI,WAAWA,CAACC,QAAQ,EAAEC,IAAI,EAAE;IAC1BC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAACG,WAAW,CAAC;IAC9C,OAAOV,KAAK,CAACW,IAAI,CAACV,iBAAiB,EAAEK,QAAQ,EAAE;MAC7CM,OAAO,EAAE;QACPC,aAAa,EAAG,UAASN,IAAI,CAACG,WAAY,EAAC,CAAE;MAC/C;IACF,CAAC,CAAC;EACJ;EACA,MAAMI,YAAYA,CAACC,QAAQ,EACzB;IAEI,OAAOf,KAAK,CAACI,GAAG,CAACH,iBAAiB,GAAC,eAAe,GAACc,QAAQ,CAACC,OAAO,CAACC,KAAK,EACzE;MACIL,OAAO,EAAC;QACJ,6BAA6B,EAAE,GAAG;QACtC,8BAA8B,EAAC,qBAAqB;QACpD,kCAAkC,EAAC,IAAI;QACtCC,aAAa,EAAG,UAASE,QAAQ,CAACL,WAAY;MAC/C;IACJ,CAAC,CAAC;EACN;EACFQ,kBAAkBA,CAACC,EAAE,EAAE;IACrB,OAAOnB,KAAK,CAACoB,MAAM,CAACnB,iBAAiB,GAAG,GAAG,GAAGkB,EAAE,CAAC;EACnD;EACAE,eAAeA,CAACF,EAAE,EAAE;IAClB,OAAOnB,KAAK,CAACI,GAAG,CAACH,iBAAiB,GAAG,GAAG,GAAGkB,EAAE,CAAC;EAChD;EACAG,kBAAkBA,CAACH,EAAE,EAAEb,QAAQ,EAAE;IAC/B,OAAON,KAAK,CAACuB,GAAG,CAACtB,iBAAiB,GAAG,GAAG,GAAGkB,EAAE,EAAEb,QAAQ,CAAC;EAC1D;AACF;AACA,eAAe,IAAIJ,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}