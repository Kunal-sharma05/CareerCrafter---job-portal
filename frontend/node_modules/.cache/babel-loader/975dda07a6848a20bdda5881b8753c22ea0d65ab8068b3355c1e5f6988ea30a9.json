{"ast":null,"code":"import axios from \"../components/utils/axios\";\n\n// import { AuthContext } from \"../components/context/AuthProvider\";\n// import { useContext } from \"react\";\n// const {auth,setAuth} = useContext(AuthContext)\nconst BASE_REST_API_URL = \"api/employers\";\nclass EmployerService {\n  getAllEmployers(auth) {\n    return axios.get(BASE_REST_API_URL, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE',\n        'Access-Control-Allow-Credentials': true,\n        Authorization: `Bearer ${auth === null || auth === void 0 ? void 0 : auth.accessToken}`\n      }\n    });\n  }\n  addProfile(id, employerDtoauth) {\n    var _auth;\n    return axios.get(BASE_REST_API_URL, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE',\n        'Access-Control-Allow-Credentials': true,\n        Authorization: `Bearer ${(_auth = auth) === null || _auth === void 0 ? void 0 : _auth.accessToken}`\n      }\n    });\n  }\n  addEmployer(employer, auth) {\n    console.log(\"access token \", auth.accessToken);\n    return axios.post(BASE_REST_API_URL, employer, {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE',\n        'Access-Control-Allow-Credentials': true,\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    });\n  }\n  // async getIdByEmail(TokenObj)\n  //   {\n\n  //       return axios.get(BASE_REST_API_URL+'GetIdByEmail/'+TokenObj.userDto.email,\n  //       {\n  //           headers:{\n  //               'Access-Control-Allow-Origin': '*',\n  //           'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE',\n  //           'Access-Control-Allow-Credentials':true,\n  //            Authorization: `Bearer ${TokenObj.accessToken}`\n  //           }\n  //       });\n  //   }\n  deleteEmployerById(id) {\n    return axios.delete(BASE_REST_API_URL + \"/\" + id);\n  }\n  getEmployerById(id) {\n    return axios.get(BASE_REST_API_URL + \"/\" + id);\n  }\n  updateEmployerById(id, employer) {\n    return axios.put(BASE_REST_API_URL + \"/\" + id, employer);\n  }\n}\nexport default new EmployerService();","map":{"version":3,"names":["axios","BASE_REST_API_URL","EmployerService","getAllEmployers","auth","get","headers","Authorization","accessToken","addProfile","id","employerDtoauth","_auth","addEmployer","employer","console","log","post","deleteEmployerById","delete","getEmployerById","updateEmployerById","put"],"sources":["C:/student/Hexaware/careercrafter/frontend/src/services/EmployerService.jsx"],"sourcesContent":["import axios from \"../components/utils/axios\";\r\n\r\n// import { AuthContext } from \"../components/context/AuthProvider\";\r\n// import { useContext } from \"react\";\r\n// const {auth,setAuth} = useContext(AuthContext)\r\nconst BASE_REST_API_URL = \"api/employers\";\r\nclass EmployerService {\r\n  getAllEmployers(auth) {\r\n    return axios.get(BASE_REST_API_URL,\r\n      {\r\n      headers:{\r\n          'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE',\r\n      'Access-Control-Allow-Credentials':true,\r\n       Authorization: `Bearer ${auth?.accessToken}`\r\n      }\r\n      });\r\n  }\r\n  addProfile(id,employerDtoauth) {\r\n    return axios.get(BASE_REST_API_URL,\r\n      {\r\n      headers:{\r\n          'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE',\r\n      'Access-Control-Allow-Credentials':true,\r\n       Authorization: `Bearer ${auth?.accessToken}`\r\n      }\r\n      });\r\n  }\r\n  addEmployer(employer, auth) {\r\n    console.log(\"access token \", auth.accessToken);\r\n    return axios.post(BASE_REST_API_URL, employer,\r\n      {\r\n        headers:{\r\n            'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE',\r\n        'Access-Control-Allow-Credentials':true,\r\n         Authorization: `Bearer ${auth.accessToken}`\r\n        }\r\n    });\r\n  }\r\n  // async getIdByEmail(TokenObj)\r\n  //   {\r\n       \r\n  //       return axios.get(BASE_REST_API_URL+'GetIdByEmail/'+TokenObj.userDto.email,\r\n  //       {\r\n  //           headers:{\r\n  //               'Access-Control-Allow-Origin': '*',\r\n  //           'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE',\r\n  //           'Access-Control-Allow-Credentials':true,\r\n  //            Authorization: `Bearer ${TokenObj.accessToken}`\r\n  //           }\r\n  //       });\r\n  //   }\r\n  deleteEmployerById(id) {\r\n    return axios.delete(BASE_REST_API_URL + \"/\" + id);\r\n  }\r\n  getEmployerById(id) {\r\n    return axios.get(BASE_REST_API_URL + \"/\" + id);\r\n  }\r\n  updateEmployerById(id, employer) {\r\n    return axios.put(BASE_REST_API_URL + \"/\" + id, employer);\r\n  }\r\n}\r\nexport default new EmployerService();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,2BAA2B;;AAE7C;AACA;AACA;AACA,MAAMC,iBAAiB,GAAG,eAAe;AACzC,MAAMC,eAAe,CAAC;EACpBC,eAAeA,CAACC,IAAI,EAAE;IACpB,OAAOJ,KAAK,CAACK,GAAG,CAACJ,iBAAiB,EAChC;MACAK,OAAO,EAAC;QACJ,6BAA6B,EAAE,GAAG;QACtC,8BAA8B,EAAC,qBAAqB;QACpD,kCAAkC,EAAC,IAAI;QACtCC,aAAa,EAAG,UAASH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,WAAY;MAC5C;IACA,CAAC,CAAC;EACN;EACAC,UAAUA,CAACC,EAAE,EAACC,eAAe,EAAE;IAAA,IAAAC,KAAA;IAC7B,OAAOZ,KAAK,CAACK,GAAG,CAACJ,iBAAiB,EAChC;MACAK,OAAO,EAAC;QACJ,6BAA6B,EAAE,GAAG;QACtC,8BAA8B,EAAC,qBAAqB;QACpD,kCAAkC,EAAC,IAAI;QACtCC,aAAa,EAAG,UAAO,CAAAK,KAAA,GAAER,IAAI,cAAAQ,KAAA,uBAAJA,KAAA,CAAMJ,WAAY;MAC5C;IACA,CAAC,CAAC;EACN;EACAK,WAAWA,CAACC,QAAQ,EAAEV,IAAI,EAAE;IAC1BW,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEZ,IAAI,CAACI,WAAW,CAAC;IAC9C,OAAOR,KAAK,CAACiB,IAAI,CAAChB,iBAAiB,EAAEa,QAAQ,EAC3C;MACER,OAAO,EAAC;QACJ,6BAA6B,EAAE,GAAG;QACtC,8BAA8B,EAAC,qBAAqB;QACpD,kCAAkC,EAAC,IAAI;QACtCC,aAAa,EAAG,UAASH,IAAI,CAACI,WAAY;MAC3C;IACJ,CAAC,CAAC;EACJ;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAU,kBAAkBA,CAACR,EAAE,EAAE;IACrB,OAAOV,KAAK,CAACmB,MAAM,CAAClB,iBAAiB,GAAG,GAAG,GAAGS,EAAE,CAAC;EACnD;EACAU,eAAeA,CAACV,EAAE,EAAE;IAClB,OAAOV,KAAK,CAACK,GAAG,CAACJ,iBAAiB,GAAG,GAAG,GAAGS,EAAE,CAAC;EAChD;EACAW,kBAAkBA,CAACX,EAAE,EAAEI,QAAQ,EAAE;IAC/B,OAAOd,KAAK,CAACsB,GAAG,CAACrB,iBAAiB,GAAG,GAAG,GAAGS,EAAE,EAAEI,QAAQ,CAAC;EAC1D;AACF;AACA,eAAe,IAAIZ,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}