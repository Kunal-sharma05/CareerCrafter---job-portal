{"ast":null,"code":"import axios from \"../components/utils/axios\";\nimport AuthProvider from \"../components/context/AuthProvider\";\nimport { useContext } from \"react\";\nconst {\n  auth,\n  setAuth\n} = useContext(AuthProvider);\nconst BASE_REST_API_URL = \"api/employers\";\nclass EmployerService {\n  getAllEmployers() {\n    return axios.get(BASE_REST_API_URL);\n  }\n  addEmployer(employer) {\n    console.log(\"access token \", auth.accessToken);\n    return axios.post(BASE_REST_API_URL, employer, {\n      headers: {\n        Authorization: `Bearer ${auth.accessToken}` // Assuming it's a Bearer token\n      }\n    });\n  }\n  deleteEmployerById(id) {\n    return axios.delete(BASE_REST_API_URL + \"/\" + id);\n  }\n  getEmployerById(id) {\n    return axios.get(BASE_REST_API_URL + \"/\" + id);\n  }\n  updateEmployerById(id, employer) {\n    return axios.put(BASE_REST_API_URL + \"/\" + id, employer);\n  }\n}\nexport default new EmployerService();","map":{"version":3,"names":["axios","AuthProvider","useContext","auth","setAuth","BASE_REST_API_URL","EmployerService","getAllEmployers","get","addEmployer","employer","console","log","accessToken","post","headers","Authorization","deleteEmployerById","id","delete","getEmployerById","updateEmployerById","put"],"sources":["C:/student/Hexaware/careercrafter/frontend/src/services/EmployerService.jsx"],"sourcesContent":["import axios from \"../components/utils/axios\";\r\nimport AuthProvider from \"../components/context/AuthProvider\";\r\nimport { useContext } from \"react\";\r\nconst { auth, setAuth } = useContext(AuthProvider);\r\nconst BASE_REST_API_URL = \"api/employers\";\r\nclass EmployerService {\r\n  getAllEmployers() {\r\n    return axios.get(BASE_REST_API_URL);\r\n  }\r\n  addEmployer(employer) {\r\n    console.log(\"access token \", auth.accessToken);\r\n    return axios.post(BASE_REST_API_URL, employer, {\r\n      headers: {\r\n        Authorization: `Bearer ${auth.accessToken}`, // Assuming it's a Bearer token\r\n      },\r\n    });\r\n  }\r\n  deleteEmployerById(id) {\r\n    return axios.delete(BASE_REST_API_URL + \"/\" + id);\r\n  }\r\n  getEmployerById(id) {\r\n    return axios.get(BASE_REST_API_URL + \"/\" + id);\r\n  }\r\n  updateEmployerById(id, employer) {\r\n    return axios.put(BASE_REST_API_URL + \"/\" + id, employer);\r\n  }\r\n}\r\nexport default new EmployerService();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,2BAA2B;AAC7C,OAAOC,YAAY,MAAM,oCAAoC;AAC7D,SAASC,UAAU,QAAQ,OAAO;AAClC,MAAM;EAAEC,IAAI;EAAEC;AAAQ,CAAC,GAAGF,UAAU,CAACD,YAAY,CAAC;AAClD,MAAMI,iBAAiB,GAAG,eAAe;AACzC,MAAMC,eAAe,CAAC;EACpBC,eAAeA,CAAA,EAAG;IAChB,OAAOP,KAAK,CAACQ,GAAG,CAACH,iBAAiB,CAAC;EACrC;EACAI,WAAWA,CAACC,QAAQ,EAAE;IACpBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAET,IAAI,CAACU,WAAW,CAAC;IAC9C,OAAOb,KAAK,CAACc,IAAI,CAACT,iBAAiB,EAAEK,QAAQ,EAAE;MAC7CK,OAAO,EAAE;QACPC,aAAa,EAAG,UAASb,IAAI,CAACU,WAAY,EAAC,CAAE;MAC/C;IACF,CAAC,CAAC;EACJ;EACAI,kBAAkBA,CAACC,EAAE,EAAE;IACrB,OAAOlB,KAAK,CAACmB,MAAM,CAACd,iBAAiB,GAAG,GAAG,GAAGa,EAAE,CAAC;EACnD;EACAE,eAAeA,CAACF,EAAE,EAAE;IAClB,OAAOlB,KAAK,CAACQ,GAAG,CAACH,iBAAiB,GAAG,GAAG,GAAGa,EAAE,CAAC;EAChD;EACAG,kBAAkBA,CAACH,EAAE,EAAER,QAAQ,EAAE;IAC/B,OAAOV,KAAK,CAACsB,GAAG,CAACjB,iBAAiB,GAAG,GAAG,GAAGa,EAAE,EAAER,QAAQ,CAAC;EAC1D;AACF;AACA,eAAe,IAAIJ,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}