{"ast":null,"code":"var _jsxFileName = \"C:\\\\student\\\\Hexaware\\\\careercrafter\\\\frontend\\\\src\\\\components\\\\JobSeekers.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { SideNav } from './templates/SideNav';\nimport { Header } from './Header';\nimport { Footer } from './Footer';\nimport JobSeekerService from '../services/JobSeekerService';\nimport { useNavigate } from 'react-router-dom';\nimport { CardJobSeeker } from './CardJobSeeker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const JobSeekers = () => {\n  _s();\n  const [jobSeekerArray, setJobSeekerArray] = useState([]);\n  const navigate = useNavigate();\n  const fetchAllJobSeekers = () => {\n    console.log(\"fetch all job seeker method fired......\");\n    JobSeekerService.getAllJobSeekers().then(response => {\n      console.log(\"response recieved from the api\", response.data);\n      setJobSeekerArray(response.data);\n    }).catch(error => {\n      console.log(\"Error recieved from saved API...\", error);\n    });\n  };\n  useEffect(() => {\n    console.log(\"use effect of home page....\");\n    fetchAllJobSeekers();\n  }, []);\n  const handleApplyButton = cardIndex => {\n    console.log(\"index passed\", cardIndex);\n    setJobSeekerArray(prev => {\n      return prev.map((item, index) => {\n        if (index === cardIndex) {\n          return {\n            ...item,\n            applied: !item.applied\n          };\n        }\n        return item;\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gradient-to-r from-slate-900 via-red-900 to-slate-900 w-full h-full flex gap-5\",\n      children: [/*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"scrollbar\",\n        className: `w-[80%] h-[98%] flex gap-5 flex-wrap mt-2 overflow-auto scroll-m-0 `,\n        style: {\n          scrollbarWidth: 'none'\n        },\n        children: jobSeekerArray.map((item, key) => /*#__PURE__*/_jsxDEV(CardJobSeeker, {\n          index: key,\n          values: item,\n          handleClick: handleApplyButton\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(JobSeekers, \"7k3akR4k3P4J11P7qogK3nq1YU4=\", false, function () {\n  return [useNavigate];\n});\n_c = JobSeekers;\nvar _c;\n$RefreshReg$(_c, \"JobSeekers\");","map":{"version":3,"names":["React","useEffect","useState","SideNav","Header","Footer","JobSeekerService","useNavigate","CardJobSeeker","jsxDEV","_jsxDEV","JobSeekers","_s","jobSeekerArray","setJobSeekerArray","navigate","fetchAllJobSeekers","console","log","getAllJobSeekers","then","response","data","catch","error","handleApplyButton","cardIndex","prev","map","item","index","applied","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","scrollbarWidth","key","values","handleClick","_c","$RefreshReg$"],"sources":["C:/student/Hexaware/careercrafter/frontend/src/components/JobSeekers.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { SideNav } from './templates/SideNav';\r\nimport { Header } from './Header';\r\nimport { Footer } from './Footer';\r\nimport JobSeekerService from '../services/JobSeekerService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CardJobSeeker } from './CardJobSeeker';\r\n\r\nexport const JobSeekers = () => {\r\n  const[jobSeekerArray,setJobSeekerArray]=useState([]);\r\n  const navigate = useNavigate();\r\n  const fetchAllJobSeekers = () => {\r\n    console.log(\"fetch all job seeker method fired......\");\r\n    JobSeekerService.getAllJobSeekers()\r\n      .then((response) => {\r\n        console.log(\"response recieved from the api\", response.data);\r\n        setJobSeekerArray(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error recieved from saved API...\", error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    console.log(\"use effect of home page....\");\r\n    fetchAllJobSeekers();\r\n  }, []);\r\n  const handleApplyButton = (cardIndex) => {\r\n    console.log(\"index passed\", cardIndex);\r\n    setJobSeekerArray((prev) => {\r\n      return prev.map((item, index) => {\r\n        if (index === cardIndex) {\r\n          return { ...item, applied: !item.applied };\r\n        }\r\n        return item;\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"w-full h-full flex flex-col\" >\r\n    <Header/>\r\n    <div className=\"bg-gradient-to-r from-slate-900 via-red-900 to-slate-900 w-full h-full flex gap-5\">\r\n      <SideNav />\r\n      <div id=\"scrollbar\" className={`w-[80%] h-[98%] flex gap-5 flex-wrap mt-2 overflow-auto scroll-m-0 `} style={{ scrollbarWidth: 'none'}}>\r\n        {jobSeekerArray.map((item, key) => (\r\n          <CardJobSeeker\r\n            key={key}\r\n            index={key}\r\n            values={item}\r\n            handleClick={handleApplyButton}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n    <Footer />\r\n  </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}